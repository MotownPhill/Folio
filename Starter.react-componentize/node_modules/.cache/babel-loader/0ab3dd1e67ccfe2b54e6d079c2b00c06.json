{"ast":null,"code":"import axios from \"axios\";\nvar userService = {\n  endpoint: \"https://api.remotebootcamp.dev/api/users\"\n};\n\nuserService.register = function (payload) {\n  var config = {\n    method: \"POST\",\n    url: userService.endpoint + \"/register\",\n    data: payload,\n    crossdomain: true,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return axios(config);\n};\n\nuserService.login = function (payload) {\n  var config = {\n    method: \"POST\",\n    url: userService.endpoint + \"/login\",\n    data: payload,\n    crossdomain: true,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return axios(config);\n};\n\nuserService.current = function () {\n  var config = {\n    method: \"GET\",\n    url: userService.endpoint + \"/current\",\n    crossdomain: true,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return axios(config);\n};\n\nuserService.userById = function (id) {\n  var config = {\n    method: \"GET\",\n    url: userService.endpoint + \"/\" + id,\n    crossdomain: true,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return axios(config);\n};\n\nuserService.logout = function () {\n  var config = {\n    method: \"GET\",\n    url: userService.endpoint + \"/logout\",\n    crossdomain: true,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return axios(config);\n};\n\nexport default userService;","map":{"version":3,"sources":["/home/motownphilly/Folio/starter-task/Starter.react-componentize/src/services/users.js"],"names":["axios","userService","endpoint","register","payload","config","method","url","data","crossdomain","headers","login","current","userById","id","logout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,WAAW,GAAG;AAChBC,EAAAA,QAAQ,EAAE;AADM,CAApB;;AAGAD,WAAW,CAACE,QAAZ,GAAuB,UAACC,OAAD,EAAa;AAChC,MAAMC,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,GAAG,EAAEN,WAAW,CAACC,QAAZ,GAAuB,WAFjB;AAGXM,IAAAA,IAAI,EAAEJ,OAHK;AAIXK,IAAAA,WAAW,EAAE,IAJF;AAKXC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AALE,GAAf;AAOA,SAAOV,KAAK,CAACK,MAAD,CAAZ;AACH,CATD;;AAUAJ,WAAW,CAACU,KAAZ,GAAoB,UAAAP,OAAO,EAAI;AAC3B,MAAMC,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,GAAG,EAAEN,WAAW,CAACC,QAAZ,GAAuB,QAFjB;AAGXM,IAAAA,IAAI,EAAEJ,OAHK;AAIXK,IAAAA,WAAW,EAAE,IAJF;AAKXC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AALE,GAAf;AAOA,SAAOV,KAAK,CAACK,MAAD,CAAZ;AACH,CATD;;AAWAJ,WAAW,CAACW,OAAZ,GAAsB,YAAM;AACxB,MAAMP,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,GAAG,EAAEN,WAAW,CAACC,QAAZ,GAAuB,UAFjB;AAGXO,IAAAA,WAAW,EAAE,IAHF;AAIXC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAJE,GAAf;AAMA,SAAOV,KAAK,CAACK,MAAD,CAAZ;AACH,CARD;;AAUAJ,WAAW,CAACY,QAAZ,GAAuB,UAACC,EAAD,EAAQ;AAC3B,MAAMT,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,GAAG,EAAEN,WAAW,CAACC,QAAZ,GAAuB,GAAvB,GAA6BY,EAFvB;AAGXL,IAAAA,WAAW,EAAE,IAHF;AAIXC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAJE,GAAf;AAMA,SAAOV,KAAK,CAACK,MAAD,CAAZ;AACH,CARD;;AAUAJ,WAAW,CAACc,MAAZ,GAAqB,YAAM;AACvB,MAAMV,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,GAAG,EAAEN,WAAW,CAACC,QAAZ,GAAuB,SAFjB;AAGXO,IAAAA,WAAW,EAAE,IAHF;AAIXC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB;AAJE,GAAf;AAMA,SAAOV,KAAK,CAACK,MAAD,CAAZ;AACH,CARD;;AAUA,eAAeJ,WAAf","sourcesContent":["import axios from \"axios\";\r\n\r\nconst userService = {\r\n    endpoint: \"https://api.remotebootcamp.dev/api/users\"\r\n};\r\nuserService.register = (payload) => {\r\n    const config = {\r\n        method: \"POST\",\r\n        url: userService.endpoint + \"/register\",\r\n        data: payload,\r\n        crossdomain: true,\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n    };\r\n    return axios(config)\r\n}\r\nuserService.login = payload => {\r\n    const config = {\r\n        method: \"POST\",\r\n        url: userService.endpoint + \"/login\",\r\n        data: payload,\r\n        crossdomain: true,\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n    };\r\n    return axios(config)\r\n}\r\n\r\nuserService.current = () => {\r\n    const config = {\r\n        method: \"GET\",\r\n        url: userService.endpoint + \"/current\",\r\n        crossdomain: true,\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n    };\r\n    return axios(config)\r\n}\r\n\r\nuserService.userById = (id) => {\r\n    const config = {\r\n        method: \"GET\",\r\n        url: userService.endpoint + \"/\" + id,\r\n        crossdomain: true,\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n    };\r\n    return axios(config)\r\n}\r\n\r\nuserService.logout = () => {\r\n    const config = {\r\n        method: \"GET\",\r\n        url: userService.endpoint + \"/logout\",\r\n        crossdomain: true,\r\n        headers: { \"Content-Type\": \"application/json\" }\r\n    };\r\n    return axios(config)\r\n}\r\n\r\nexport default userService;"]},"metadata":{},"sourceType":"module"}